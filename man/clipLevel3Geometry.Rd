% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clipLevel3.R
\name{clipLevel3Geometry}
\alias{clipLevel3Geometry}
\title{Clip GEDI Full Waveform Geolocations by geometry}
\usage{
clipLevel3Geometry(level3, polygon_sf, split_by = "id")
}
\arguments{
\item{level3}{A \code{\link[data.table:data.table-class]{data.table::data.table}} resulting from \code{\link[=getLevel3]{getLevel3()}} function.}

\item{polygon_sf}{Polygon. An object of class \code{\link{sf}},
which can be loaded as an ESRI shapefile using \link[raster:shapefile]{raster::shapefile} function in the \emph{raster} package.}

\item{split_by}{Polygon id. If defined, GEDI data will be clipped by each polygon using the polygon id from
table of attribute defined by the user.}
}
\value{
Returns a lilst of S4 object of class \code{\link[data.table:data.table-class]{data.table::data.table}} containing the
clipped GEDI level3 extracted geolocations.
}
\description{
This function clips level3 extracted geolocation (level3)
data within a given geometry
}
\examples{
# Specifying the path to GEDI level3 data (zip file)
outdir <- tempdir()
level3_fp_zip <- system.file("extdata",
  "GEDI01_B_2019108080338_O01964_T05337_02_003_01_sub.zip",
  package = "rGEDI"
)

# Unzipping GEDI level3 data
level3path <- unzip(level3_fp_zip, exdir = outdir)

# Reading GEDI level3 data (h5 file)
level3 <- readLevel3(level3path = level3path)

# Extracting GEDI Full Waveform Geolocations
level3 <- getLevel3(level3)

# Specifying the path to shapefile
polygon_filepath <- system.file("extdata", "stands_cerrado.shp", package = "rGEDI")

# Reading shapefile as SpatialPolygonsDataFrame object
library(sf)
polygon_spdf <- sf::st_read(polygon_filepath)

# Clipping GEDI Full Waveform Geolocations by Geometry
level3_clip <- clipLevel3Geometry(level3, polygon_spdf, split_by = "id")

hasLeaflet <- require(leaflet)

if (hasLeaflet) {
  leaflet() \%>\%
    addCircleMarkers(level3_clip$longitude_bin0,
      level3_clip$latitude_bin0,
      radius = 1,
      opacity = 1,
      color = "red"
    ) \%>\%
    addScaleBar(options = list(imperial = FALSE)) \%>\%
    addPolygons(
      data = polygon_spdf, weight = 1, col = "white",
      opacity = 1, fillOpacity = 0
    ) \%>\%
    addProviderTiles(providers$Esri.WorldImagery)
}

}
\seealso{
\url{https://lpdaac.usgs.gov/products/gedi01_bv002/}
}
